
=== Page 1 ===
Hivweander Shenzhen Hiwonder Technology Co,Ltd
Lesson 4 Tag Recognition

1. Program Logic

When the tag card is recognized by the camera, the corresponding ID of

the tag will be displayed in the transmitted image after processing.

AprilTag is similar to barcodes and QR codes. As a visual position marker,
it can be use for quickly detecting tags and calculating their relative positions,

meeting real-time requirements. The principle of tag recognition is as follows:
Step 1: Image Acquisition and Processing:

First, initialize the camera. After capturing the image, process it by
copying, remapping, and displaying it. Convert the BGR format image to

grayscale.
Step 2: Tag Detection:

Next, obtain the coordinates of the four corners of the tag and draw the

contours of the AprilTag.
Step 3: Tag Information Retrieval:

Then, within the identified quadrilateral, determine the pixel coordinates to
further verify the reliability of the encoding. Match the tag with a known
encoding library. After filtering and validation, calculate the tag's ID and

rotation angle.

Step 4: Highlight Detected Tags and Activate the Buzzer:



=== Page 2 ===
Hivweander Shenzhen Hiwonder Technology Co,Ltd

Finally, convert the coordinates of the detected tags to their pre-scaled
coordinates, and determine if it is the largest tag. Highlight the recognized tag

and activate the buzzer.

2. Operation Steps

If you use the system image we provide, you can find the corresponding
program in the folder “3 Jetson Orin Nano Basic Operation -> 2.
Introduction to System Desktop .”

This method requires that the purchased kit includes the expansion board.

Prior to operations, you need to transfer the routine “apriltag_discern.py”
stored in “6. OpenCV Computer Vision Course\ Program Files” to the Jetson

Orin Nano.

For the file transfer method, you can refer to the content in “3. Basic

Operation Course”.

Noted: The input command should be case sensitive, and the “Tab” key is able

to implement the key works.

>

ra)
Terminal

1) Open Nocmahine. Double click on , or use the shortcut key to

open the terminal. Enter the command to install the “apriltag” package.

pip3 install apriltag -i https://pypi.tuna.tsinghua.edu.cn/simple

:~$ pip3 install apriltag -i https://pypi.tuna.tsinghua.edu.cn/simp
e
Defaulting to user installation because normal site-packages is not writeable
ooking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple
ollecting apriltag

Downloading https://pypi.tuna.tsinghua.edu.cn/packages/f2/e5/957bb26d575141bc2
Baf7214c14e315c9ebb9ai2ccf7c8dO9ed40b59bb29/apriltag-0.0.16.tar.gz (201 kB)
Preparing metadata (setup.py) ... done
Building wheels for collected packages: apriltag
= a = Db D>

2) Install gtk-module:

sudo apt-get install libcanberra-gtk-module



=== Page 3 ===
b-— IVE rr) co ("Shenzhen Hiwonder Technology Co,Ltd

sudo apt-get install Libcanberra-gtk-module

3) Enter the command to start tag recognition.

python3 apriltag_discern.py

python3 apriltag discern.py

At this point, the terminal's live camera feed will open, and the camera will
recognize tags within its visual range. When a tag is detected, it will be
highlighted on the feedback screen, and its ID information will be printed in the

lower-left corner, as shown in the image below:

| tag_id: 3
| tag_family: tag36h11

(x=639, y=287) — 8144 G:146 B:150

4) Toclose the program, press “Esc”.

3. Program Analysis

The program is stored in:

/home/ubuntu/Opencv/apriltag_discern.py

3



=== Page 4 ===
Hivwoander Shenzhen Hiwonder Technology Co,Ltd

numpy as np
apriltag

if sys.version_info.major ==
print('Please run this program with python3!")
sys.exit(0)

3.1 Import Library File

Import the cv2 and apriltag libraries from openCV, and import and

instantiate the numpy library as np.

FPSB!

import sys

import cv2

import math

import time

import numpy as np
import apriltag

3.2 Tag Recognition

cv2.drawContours(img, [np.array(corners, np.int)], -1,

Apriltag iRaJ=E2A2) cv2 HA drawContours()# putText()mM. HA:

AprilTag recognition primarily uses the cv2 library functions
drawContours() and putText(). Here’s a breakdown of how drawContours() is

used:

The drawContours() function is used to draw the contours of the tag. The

parameters are as follows:



=== Page 5 ===
Hivweander Shenzhen Hiwonder Technology Co,Ltd

The first parameter ‘img’ is the image on which the contours are to be

drawn.

The second parameter ‘[np.array(corners, np.int)]’ is the contours

themselves. In Python, this is a list containing an array of the contour points.

The third parameter ‘-1’ specifies which contours to draw. -1 indicates that

all contours in the list should be drawn.

The fourth parameter ‘(0, 255, 255)’ is the color of the contours, specified

in BGR (Blue, Green, Red) format. Here, (0, 255, 255) represents yellow.

The fifth parameter ‘2’ is the thickness of the contour lines. ‘2’ indicates a
line width of 2 pixels. Using -1 instead would fill the contours with the specified

color.

cv2.putText(img, “tag_id: “ + str(tag_id), (10, img.shape[9] - 30), cv2.FONT_HERSHEY_SIMPLEX, 0.65, [0, 255, 255], 2)

cv2.putText(img, "tag family: " + tag_family, (10, img.shape[9] - 10), cv2.FONT_HERSHEY_SIMPLEX, 9.65, [9, 255, 255], 2)

The putText() function is used to display text on an image. For example:
The first parameter “img” is the input image on which the text will be displayed.
The second parameter "tag_id: "+ str(tag_id)” is the text to be added.

The third parameter “(10, img.shape[0] - 30)” The coordinates of the

bottom-left corner of the text.

The fourth parameter “cv2.FONT_HERSHEY_SIMPLEX’” is the font type used

for the text.
The fifth parameter “0.65” is the size of the font.

The sixth parameter “[0, 255, 255]” is the color of the text, in BGR (Blue, Green,

Red) format. Here, it represents yellow.

The seventh parameter “2” is the thickness of the font.


