
=== Page 1 ===
Hiweander Shenzhen Hiwonder Technology Co,Ltd

Lesson 7 Train YOLOv5 Model -
Training Process

@ The input command should be case sensitive, and “Tab” key can be

used to complement the key words.

If you use the system image we provide, you can find the corresponding
program in the folder “3 Basic Operation Course -> 2. Introduction to

System Desktop .”

1) Power on Jetson Orin Nano, and connect it to NoMachine.
2) Connect the USB camera to the Jetson Orin Nano.

3) Based on the location of YOLOv5 folder (In the previous tutorials, it is
stored in “~/Desktop’” folder), enter the command. The folder location can be

modified according to your actual need.
cd Desktop/yolov5/
4) Enter the command and press Enter to train the model:

python3 train.py --data ~/Desktop/my_data/data.yaml --weights
yolov5s.pt --img 160 --epochs 10 --batch 8

S$ python3 train.py --data ~/Desktop/my_data/data

-yaml --weights yolovS5s.pt --img 640 --epochs 100 --batch 8

In the command, --img specifies the image size; “--batch” denotes the
number of images per batch; “--epochs” refers to the number of training
epochs; “--data’” is the path to the dataset; and “--weights” is the name and
path of the weights. The final model will be saved in the yolov5 folder with the

name yolovds.pt.

We can adjust the parameters mentioned above according to the actual

1



=== Page 2 ===
Hiweander Shenzhen Hiwonder Technology Co,Ltd

situation. To improve model reliability, you can increase the number of training

epochs, though this will also increase the training time.

If the following content appears, it indicates that training is in progress.

Epoch
12/99

GPU_mem
1.77G
Class

all

GPU_mem
1.77G
Class

all

GPU_mem
1.77G
Class

all

GPU_mem
1.77G
Class

all

GPU_mem
1.77G
Class

all

GPU_mem
1.77G
Class

all

GPU_mem
1.77G
Class

all

box_loss
0.05542
Images

3

box_loss
0.06613
Images

3

box_loss
0.07408
Images

3

box_loss
©.08162
Images

3

box_loss
0.06854
Images

=

box_loss
0.07855
Images

3

box_loss
0.06856
Images

3

obj_loss
0.02826
Instances
3

obj_loss
0.03178
Instances
3

obj_loss
0.03309
Instances

obj_loss
©.03258
Instances
3

obj_loss
0.03314
Instances
=|

obj_loss
0.03306
Instances
3

obj_loss
0.03074
Instances

cls_loss
fo)

Pp
0.00333

cls_loss
i)

Pp

0.0129

cls_loss
}

Pp
©.0129
cls_loss
ic}

Pp

0.0662

cls_loss

Instances
13

R

1

Instances
15

R

S

Instances
18

R

1

Instances
16

R

Z

Instances
24

R

1

Instances

Instances
15

R

©.667

Size

640:

mAPSO
0.119

size

640:

mAP50
0.23

size

640:

mMAPSO
0.23

size

640:

mAP5O
0.543

Size

640:

mMAPSO
0.696

size

640:

mAP50
0.696

size

640:

MAPS5O
0.775

100% | | 2/2 00:00
MAPSO-95: 100%| |

0.0352

100% | | 2/2 00:00
MAP50-95: 100% |

0.0993

100% | MM | 2/2 00:00
MAPS5O-95: 100%| |

0.0993

100% | MM | 2/2 00:00
MAP50-95: 100%| |

0.231

100% | | 2/2 00:00
MAP50-95: 100%|

0.276

100% | | 2/2 00:00
MAP50-95: 100%]

0.276

100% | MM | 2/2 00:00
MAP5O0-95: 100%| |

0.143

5) After training is complete, the model file is usually stored in the
“yolov5/run/train/exp...” folder. Check the actual location based on the string
printed after training. For example, as shown in the image below, the

generated model is located in run/train/exp13.

Results saved to runs/train/exp13

6) You can use the file explorer to view and obtain the following:

Desktop yolovS runs train exp13 weights +



