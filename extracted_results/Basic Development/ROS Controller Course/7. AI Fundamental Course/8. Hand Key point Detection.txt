
=== Page 1 ===
Hivweander Shenzhen Hiwonder Technology Co,Ltd
Lesson 8 Hand Key point Detection

1. Program Logic

First, it's important to understand that MediaPipe's hand detection model
utilizes a machine learning pipeline composed of multiple models (linear
models, akin to a pipeline). The model processes the entire image and returns
a directional hand bounding box. The hand landmark model operates on the
cropped image area defined by the hand detector and returns high-fidelity 3D
hand keypoints.

After importing the hand detection model, obtain the real-time camera

feed by subscribing to topic messages.

Next, process the image through transformations such as flipping and
color space conversion, which significantly reduces the need for data

augmentation by the hand landmark model.

Additionally, in our pipeline, crops can be generated based on previously
identified hand landmarks. Hand detection is re-invoked to reposition the hand

only when the landmark model can no longer recognize the hand.

Finally, detect the hand keypoints in the image and draw them.

2. Operation Steps

@ The input command should be case sensitive, and “Tab” key can be

used to complement the key words.

If you use the system image we provide, you can find the corresponding



=== Page 2 ===
Hivweander Shenzhen Hiwonder Technology Co,Ltd

program in the folder “3 Basic Operation Course -> 2. Introduction to

System Desktop .”

1) Power on Jetson Orin Nano board, and connect it to the remote

system desktop using NoMachine.

2) Connect it to the network. For specific operations, please refer to the
tutorials located in “3. Basic Operation Course -> 3. Network Configuration
(Wired and Wireless)” to access the network. Some models may need to be

re-downloaded.

3) When entering the system desktop, drag the program file “hand.py”

under the same directory to the remote desktop.

AIT > Be v &

Ze

_» Camera.py

'} face_detect.py
_» face_mesh.p
Ly) mp_face_detect.py
|} mp_gesture.py

} objectron.py

“# pose.py
» self_segmentation.py

4) Then right click on the blank area of the system desktop, and select

“Open in Terminal” to open the command-line terminal:

New Folder

Show Desktop in Files
Open in Terminal

Change Background...

Display Settings

Settings




=== Page 3 ===
ry IVW/E) i) Oo i) t Shenzhen Hiwonder Technology Co,Ltd

5) Enter the following command and press Enter to run the program.

python3 hand.py

: S python3 hand.py

6) To close the program, please use the shortcut key “Ctrl+C” to exit the

program.

3. Program Outcom

After starting the program, if the camera detects a hand, it will display the
hand’s key points and the connections between the key points in the

transmitted camera.

MediaPipe Hands

Gaeaoveaeoeoouuee




=== Page 4 ===
Hivweander Shenzhen Hiwonder Technology Co,Ltd

4. Program Analysis

@ Build a Hand Detection Model

Import the hand detection model from the MediaPipe toolkit.

The first parameter, min_detection_confidence, is the minimum confidence

for hand detection, with a default value of 0.5. The range is [0.0, 1.0].

The second parameter, min_tracking_confidence, is the minimum
confidence for hand tracking. Setting this to a higher value can improve the

robustness of the solution but may result in increased latency.

@ Retrieve Live Camera Feed

Invoke the VideoCapture() function from cv2 library to retrieve the

camera feed.

The parameter within the function parenthesis refers to the camera

interface. You can also use “O” to access the default camera.

If the current device has only one camera connected, either “O” or “-1” can
be used as the camera ID. If multiple cameras are connected, “O” presents the
first camera, “1” represents the second camera, and so on for additional

cameras.

Convert the color space by calling the cvtColor() function from the cv2

library.



=== Page 5 ===
Hivweander Shenzhen Hiwonder Technology Co,Ltd

Before performing detection on the image, you need to convert the image

to the RGB color space.

@ Detection

Based on the previously built hand model, detect the hand in the image.

@ Draw Hand Keypoints

Use the mp_drawing.draw_landmarks() function to draw the hand mesh

of the detected hand in the image.

.multi_hand_ landmarks:

@ Display the Transmitted Image

Use the imshow() function from the cv2 library to display the camera feed

in a specified window.

The first parameter inside the function’s parentheses, "'MediaPipe

Hands", is the window name, and the second parameter, image, is the image

to be displayed.


