
=== Page 1 ===
Hiweander Shenzhen Hiwonder Technology Co,Ltd

Lesson 2 CSI Camera Testing and Use

Note: Before starting this section, it is necessary to complete the installation of

the camera module according to the tutorial in the previous lesson.

1. Operation Steps

@ The input command should be case sensitive, and “Tab” key can be

used to complement the key words.

If you use the system image we provide, you can find the corresponding
program in the folder “3 Basic Operation Course -> 2. Introduction to

System Desktop .”

1) Power on the Jetson Orin Nano board, and connect it to the ubuntu

desktop using NoMachine.

2) Import the program file “Camera.py” under the same folder with this

document to the home directory of the board system.

Q Ls
D Recent
| r B a |

* Starred Desktop Documents Downloads Music Pictures Public Templates

oc

© Desktop Videos Camera.py

Terminal

3) Double click or use the shortcut key “Ctrl+Alt+T” to open

the terminal.
4) Enter the command and press Enter to start the game.

python3 Camera.py



=== Page 2 ===
oy IVE) mM Oo = {/ Shenzhen Hiwonder Technology Co,Ltd

:~$ python3 Camera.py

5) Toclose this program, press “Ctrl+C”.

2. Program Outcome

After the game starts, the screen will display the transmitted image.

img

3. Program Analysis

@ Read CSI Camera

Fidef gstreamer_pipeline(
sensor _id=0,

capture width=1920,
capture height=1080,
display width=960,
display height=540,
framerate=30,

flip method=0,




=== Page 3 ===
®
4 WAV {en} | IG =. Shenzhen Hiwonder Technology Co,Ltd
43 8 def camera_open(self):
44 8 try:
E self.cap = cv2.VideoCapture(gstreamer_pipeline(flip_method=0), cv2.CAP_GSTREAMER)
=| except Exception as e:

print (‘STF SAEM:', e)

The pose is primarily adjusted through the parameters within the
“VideoCapture” function. Using the code
“cv2.VideoCapture(gstreamer_pipeline(flip_method=0),
cv2.CAP_GSTREAMER)” as an example, the parameters inside the function

brackets are explained as follows:

1) The first parameter “gstreamer_pipeline(flip_method=0” is a framework
passed into the “gstreamer_pipeline” function, where the video data reading

preoperties are set.

2) The second parameter “cv2.CAP_GSTREAMER’, is used to select the

pipeline transmission mode.

@ Read and Display Image

os Te try:

<x [S| while True:

ret_val, frame = self.cap.read()
cv2.imshow("img", frame)

key = cv2.waitKey(10) & OxFF

s6 if key — 27 or key — ord('q'):
v4 } break

E finally:
| self.cap.release()
t cv2.destroyAllWindows ()

First, the read method is called to capture the video frame, and then the
imshow method is used to display the image. Using the code
cv2.imshow("img", frame) as an example, the parameters inside the function

brackets are explained as follows:
1) The first parameter, "img", is the title of the display window.
2) The second parameter, “frame”, is the transmitted image.

When the "q" key is pressed to close, the release method is first called to
release the camera, followed by the destroyAllWindows method to close all

windows.


