
=== Page 1 ===
Hiweander Shenzhen Hiwonder Technology Co,Ltd

Lesson 1 Introduction to ROS2 and

Comparison with ROS1

1. ROS2 Overview

ROS2 is the second generation of Robot Operating System, an upgraded
version of ROS1, which addressing some of the issues present in ROS1. The
earliest version of ROS2, Arden, was introduced in 2017. With iterative
updates and optimizations, it has now released the stable versions. Similar to
ROS1, the choice between Linux version and ROS2 version is also correlated.

The corresponding versions for both are as follows:

Foxy Ubuntu20.04
Galactic Ubuntu20.04
Humble Ubuntu22.04

2. ROS2 Features

1) Distributed architecture: ROS2 adopts a distributed architecture,
allowing different nodes to run on multiple computers. This enables ROS2 to
operate in larger-scale robotic systems and support higher-level parallel

processing and communication.



=== Page 2 ===
Hivweander Shenzhen Hiwonder Technology Co,Ltd

2) Multi-language Support: ROS5 supports various programming
language, encompassing C++, Python, Java, and others. This allows
developers to write ROS applications in their preferred language, enhancing

development efficiency and flexibility.

3) Enhanced Communication Mechanism: ROS2 introduces a refresh
communication system called Distribution Service (DDS). It is a
high-performance and real-time messaging protocol that enables implement

reliable data communication with ROS2.

4) System-level Tools: ROS2 comes with a set of system-level tools for
managing and monitoring ROS2. The tools include management tools (such
as Colcon), logging tools (such as Rosout), diagnostic tools (such as Rqt) and
others, making it easier for developers to build, test, and debug robotic

systems.

5) Real-time Performance: The design of ROS2 takes into account the
real-time performance. It provides several real-time performance tools and
libraries, such as Real-Time Executor(RTE), Real-Time Publisher(RTPS), and
etc. This allows ROS2 to be used in application scenarios where real-time

performance requirements are high.

6) Ease of Extensibility and Integration: ROS2 supports a modular
architecture, allowing developers to easily add new functions and extend
ROS2. Furthermore, ROS2 integrates with other commonly uses roboti
software and libraries, such as Gazebo simulator and Movelt robot motion

planning library.



=== Page 3 ===
Hivweander Shenzhen Hiwonder Technology Co,Ltd
3. Difference Between RO2 and ROS1

3.1 Platform

ROS1 currently only supports running on Linux systems, commonly set up
and used on Ubuntu. Meanwhile, ROS2 can currently be set up and used on
Ubuntu, Windows and even embedded development boards, making its

platform more extensive.

3.2 language

@ Ctt

The core of ROS1 is based on C++03, while ROS2 extensively utilizes
C++11.

@ Python
ROS1 primarily uses Python 2, whereas ROS2 requires Python version 3.5 or

higher, with Humble specifically requiring Python version 3.6.

3.3 Middleware

In ROS1, it is necessary to start roscore before initiating, which acts as
master node managing communication between all nodes. However, in ROS2,
there is no equivalent to roscore; instead, there is only an abstract
intermediate interface for data transmission. Currently, all implements of this
interface are based on the DDS (Data Distribution Service) standard. This
allows ROS2 to provide various high-quality QoS service strategies, improving

communication in different network environments.



=== Page 4 ===
Hivweander Shenzhen Hiwonder Technology Co,Ltd

Application Application

Application

Middleware
TCPROS/UDPROS
Intra-process

Linux/Windows/Mac/RTOS

3.4 Compilation Command
The compilation command for ROS1 is "catkin_make," while for ROS2, the
compilation command is "colcon build."

If any further development learning is required, please refer to the official

tutorial via the following link.

https://docs.ros.org/en/rolling/index.html


