
=== Page 1 ===
oy IVE) | Oo eS t Shenzhen Hiwonder Technology Co,Ltd

Lesson 11 ROS2 Communication

Interface

1. Communication Interface Introduction

In the ROS system, regardless of topics, services or actions, they all rely on an

significant concept --communication interface.

Communication isn't a monologue but rather an exchange between two or
more parties. What is being exchanged? To ensure mutual understanding, we
can define a standardized structure for the data being transmitted, and this is

what we call a communication interface.

Interfaces help reduce dependencies between programs, making it easier for
us to use others' code and for others to use our code. This is the core goal of

ROS, which is to reduce redundant efforts.

{stamp: 321..., frame_id: “map”}
{stamp: 322..., frame_id: “map”}

Action {stamp: 323..., frame_id: “
jit Subscription
; . .

Subscription

Publisher
Action Service
Client Server

ROS has three commonly used communication mechanisms, namely topics,

services, and actions. Through the interfaces defined by each communication

mechanism, various nodes can be interconnected.



=== Page 2 ===
Hiweamn oer Shenzhen Hiwonder Technology Co,Ltd

2. Custom Interface

In the Lesson 8 ROS Topic, Lesson 9 Service Instruction, and Lesson 10 ROS
Action, the custom interface package named demo_interfaces. Within this
package, three custom interfaces are created, which are String.msg,

FileDownload.action, and Addints.srv.

1) Click ® and select “System Tools ->Terminator” in sequence.

@ Programming

@) internet
‘a interne

iol Sound & Video

i) Graphics

Pf System Tools
@ Accessories
res) Help

= Preferences

Run

¥
ra Shutdown

2) Enter the command “cd hiwonder_ws/src/demo_interfaces” to

switch to the “’demo_interfaces” custom interface package.

terfaces 80x24

3) Enter “tree -L 1” and press Enter to view the root directory of the

package.



=== Page 3 ===
Hiweander Shenzhen Hiwonder Technology Co,Ltd

ubuntu@raspberrypi:~/hiwonder_ws/src/demo_interfaces$ tree -L 1

CMakeLists.txt

package. xml

5 directories, 2 files

The demo_interfaces package has action, msg and srv folders for storing

custom interface files. Following provides an explanation for each folder:

action The .action file for storing action communication.
msg The .msg file file for storing topic communication.
sIv The srv file file for storing service communication



