
=== Page 1 ===
Hiweander Shenzhen Hiwonder Technology Co,Ltd
1.1.3 Large Language Model Accessing

Note: To proceed with this section, you will need to register on the appropriate
website and obtain the API key for the large model (please refer to the file 1.2 Large

Language Model Deployment).

It is important to ensure a stable network connection for the development
board. For optimal performance, we also recommend connecting the main

controller to a wired network for enhanced stability.

1. Environment Configuration

Note: If you have purchased a robot from our company with built-in large
model functionality, the environment is already pre-configured in the robot's
image. You can directly proceed to Section 3 of this document to configure the

API key.

Install Vim and Gedit by running the corresponding commands. Install the

necessary software packages and audio libraries required for PyAudio.

sudo apt update
sudo apt install vim
sudo apt install gedit

sudo apt install python3 python3-pip python3-all-dev python3-pyaudio

portaudio19-dev libsndfile1



=== Page 2 ===
Hiwoander Shenzhen Hiwonder Technology Co,Ltd

update
1 https: //download.docker.com/Linux/ubuntu jammy InRelease [48.8 kB]
3 https://deb.nodesource.com/node_20.x nodistro InRelease
4 https://apt.kitware.com/ubuntu jammy InRelease
6 https://download.docker.com/linux/ubuntu jammy/stable arm64 Packages [47.5 kB]
77 http://ports.ubuntu.com/ubuntu-ports jammy InRelease
9
2
5

http://ports.ubuntu.com/ubuntu-ports jammy-updates InRelease [128 kB]
https://repo.download.nvidia.cn/jetson/common r36.3 InRelease
https://repo.download.nvidia.cn/jetson/t234 r36.3 InRelease

:8 https://repo.download.nvidia.cn/jetson/ffmpeg r36.3 InRelease

710 http://packages.ros.org/ros2/ubuntu jammy InRelease [4,682 B]

:11 http://ports.ubuntu.com/ubuntu-ports jammy-backports InRelease [127 kB]

2. Importing the Large Model Program Directory

1) In this section, locate the 'Appendix -> 3. Source Code' folder within the

same directory as this tutorial document.

|| large_models

2) Using the MobaXterm remote connection tool (as outlined in the '5.5
Remote Access and File Transfer’ tutorial), drag the folder into the root
directory of the main controller. The software installation package can be
found in the '5 Appendix -> 5.5 Remote Access and File Transfer’

directory.



=== Page 3 ===
| IVW/E) im | = t Shenzhen Hiwonder Technology Co,Ltd

_, large_models /home/ubuntu/
‘ ~ Name Size (KB) “%

<

[_] Follow terminal folder

UNREGISTERED VERSION - Please support MobaXterm by sub

3) Next, execute the command to navigate to the 'speech_pkg' directory."

4) Execute the following commands to install the necessary third-party

libraries.

r requirements.txt --break-system-p




=== Page 4 ===
| IWE) M Oo = t Shenzhen Hiwonder Technology Co,Ltd

install dashscope --break-system-packages

install opencv-python --break-system-packages

install sympy==1.13.1 --break-system-packages

install torch --break-system-packages

5) Then, use the command in the terminal to navigate to the 'speech'

directory.

cd ~/large_models/speech_pkg/speech

6) Run the command to list the files in the 'speech' directory.

Is

awake. py init__.py

7) Depending on the type of main controller and Python version you're using,

switch to the appropriate folder for packaging and distribution. This tutorial

uses the Jetson Orin controller as an example.

jetson_nano 3.6
jetson_orin 3.10

rpid 3.11
rpi5_ docker 3.8

8) Execute the following command to navigate to the Jetson Orin folder.



=== Page 5 ===
Hiwoander Shenzhen Hiwonder Technology Co,Ltd

cd jetson_orin/

jetson orin

9) Enter the command to copy the 'speech.so' file to the parent directory.

cp -r speech.so ..

-F speech.so ..

10) Enter the command to navigate to the parent directory.

(eo)
a

11) Execute the command to package the speech file for the Python

environment.

pip3 install .

install .

12) Enter the command to install and update the OpenAl Python library.

pip3 install openai -U

install openai -U

3. Key Configuration

1) Open the terminal and enter the following command to navigate to the

directory for configuring the large model keys:

cd ~/large_models



=== Page 6 ===
HIVW/E9MCOECT Shenzhen Hiwonder Technology Co,Ltd
> cs =/large models
2) Then, open the configuration file by running:

vim config.py

[> vin config.py CC“;

3) Once the file is open, configure the OpenAl and OpenRouter keys by filling
in the Ilm_api_key and vilm_api_key parameters, respectively (you can
obtain these keys from the '1.2 Large Language Model Deployment’

course).

mport os
rt dashscope
from openai import

api_key = °*

dashscope.api_key = api_key

For instance, copy the key created in Section 1.2 of this chapter and paste it
into the appropriate field. To paste the key, place the cursor between the
quotation marks, hold the "Shift" key, right-click, and select "Paste" (Note: Do
not mix keys from different models, as this may cause the functionality to
malfunction).

###HEngLish

1 Llm_api_key = ale
Llm_base_url = _P. s om/v1i'

13 os.environ[ "opis a! pi_key
4 vllm_api_key =
vllm_base_url w-to dis. mo jai/api/v1'

4) After pasting, press the 'Esc' key, then type the following command and

press Enter to save the file:

:wq



=== Page 7 ===
Hiwoander Shenzhen Hiwonder Technology Co,Ltd

:wal
4. Running the Demo Program

Once the keys are configured, you can run the demo program
(openai_llm_demo.py) to experience the text generation capabilities of the
large model. For example, the program's prompt might be: 'Write a 50-word

article about how technology is changing life.’

m config imp bd
m speech ) speech

client = speech.OpenAIAPI(1lm_api_key, 1llm_base_url)

(client.1L1Lm( , prompt='', model=
))

1) Torun the demo, enter the following command in the terminal:

python3 openai_Ilm_demo.py

openai_ lm demo. py

2) After running the program, the output will appear as shown in the image

below.

Technology has revolutionized our daily lives, enhancing communication, education, and efficiency. From smartphone
s facilitating instant connections to online learning platforms democratizing access to knowledge, technology empo

wers individuals to adapt and thrive. Innovations in healthcare and automation continue to reshape industries, pav
ing the way for a smarter, more connected future. Embrace the change!



