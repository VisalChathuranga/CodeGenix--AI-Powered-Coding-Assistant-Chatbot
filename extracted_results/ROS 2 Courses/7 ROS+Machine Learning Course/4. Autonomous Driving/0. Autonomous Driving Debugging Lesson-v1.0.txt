
=== Page 1 ===
ht IW/EM Oo er Shenzhen Hiwonder Technology Co,Ltd

Autonomous Driving Debugging




=== Page 2 ===
Hiwoander Shenzhen Hiwonder Technology Co,Ltd
Catalog

Preface: 2... ccc ccc ccc ee eee eee eee eee eee eee eee eee e eee e eens 1
1. Props Setup & Notices 20... ccc cc ccc ccc cece eee cee eee teen teens 1
1.1 Setup Instructions ... 0... cc cc cece eee eee cece ee eees 1
902 (0) 0 - ar 6
2. Operation StepS 2... ec cc cece cece eee ee eee ee ee eee ee eees 7
3. Recognition & Debugging ......... cece ec cc cc eee cece eee eee eee nee 8
3.1 Adjusting the Camera Angle ........... ccc ccc eee ee cee teens 8
3.2 Color Threshold Adjustment ........ 0. cee ee ee ce cece eee teenies 10
3.3 Road Sign and Traffic Light Identification and Debugging ............. 13

3.4 Program Outcome ...... cece ec cee cee eee eee teen e eens 15



=== Page 3 ===
| iIVWE) mM Oo [Shenzhen Hiwonder Technology Co,Ltd
Preface:

This document pertains to the autonomous driving capabilities of our
company's vehicle. Before engaging the autonomous driving feature, please
verify that the hardware components (such as the depth camera and car
chassis motors) installed in the vehicle meet the specified requirements and
are operating correctly. Additionally, ensure that the battery is adequately

charged.

1. Props Setup & Notices

Prior to commencing autonomous driving, please follow the steps below to set
up the map. Note: Tools required for autonomous driving are available for
separate purchase. If you are interested, kindly reach out to us at

support@hiwonder.com.

1.1 Setup Instructions

1. Map Setup

To begin, ensure that the site is situated on a flat and spacious ground, and

verify that there is ample lighting surrounding the area, as illustrated in the

image below:




=== Page 4 ===
Hiweander

Place the robot at the start point as pictured.

C a
>
¢
a =
, | > ie
\
S|

SSeauo

As the robot advances, it will navigate along the yellow line bordering the map,

and it can dynamically adjust its posture based on the lane lines in real-time.
2 Road Signs Setup

In the game of autonomous driving, a total of 4 waypoints need to be placed: 2
for straight driving, 1 for right turn, and 1 for parking. Please refer to the
following image for the specific placement positions: (Note: Ensure accurate

placement!!)



=== Page 5 ===
Hiweander

wy
4 HHH ==

NUT TNIT | UL VNU UUAT

— ot sacpsis

E Seri erat

Go straight: instruct the robot car to go forward.




=== Page 6 ===
bt IWS) - Oo =) t Shenzhen Hiwonder Technology Co,Ltd

Turn right: Instruct the robot car to turn right.

Park: Command the robot car to park.



=== Page 7 ===
Hiweander

The purpose of the road signs is to guide the car during its journey. Once the
car recognizes a road sign, it will perform the appropriate actions. Additionally,

the car will slow down as it approaches a pedestrian crosswalk.
3 Traffic Light Setup

In the game of the autonomous driving function, only one traffic light needs to

be placed. The exact placement location is illustrated in the figure below:

PE RAANN

Traffic light props are utilized to replicate real-world traffic lights on roads.

When the car detects the traffic light, it will adhere to the "stop on red light,

5



=== Page 8 ===
Hiwoander
go on green light" rule.

Once all venue props are arranged, refer to the following picture for setting up

the venue environment:

1.2 Notice:

1. Ensure that the site has adequate lighting, preferably natural ambient
light. Avoid strong direct light sources and colored lights, as they may
hinder overall recognition. Pay attention to this aspect when setting up
the site.

2. While laying out and using the equipment, ensure proper care and
protection of the props on the site. In case of incomplete maps or signs,
or if the traffic light is damaged and cannot function properly, promptly
contact our after-sales personnel to purchase replacements to prevent

any disruptions to the recognition process.



=== Page 9 ===
Hiwoander Shenzhen Hiwonder Technology Co,Ltd

2. Operation Steps

Note: The input command should be case sensitive, and keywords can be

complemented using Tab key.

1) Place the robot at the starting point of the map, and proceed clockwise

while recognizing the road signs.

2) Start the robot, and access the robot system desktop using NoMachine.

3) Click-on [= | to open the command-line terminal.

4) Execute the command, and hit Enter to disable the app service.

sudo systemctl stop start_app_node.service

stop start_app_node.service

5) Run the command to initiate autonomous driving service.

roslaunch jetauto_example self_driving.launch

hiwonder_example self_driving. Launch

The printed message below indicates a successful startup.

PU +0, now: CPU 674, GPU 3675 (MiB)

[09/28/2023-18:42:23] [TRT] [I] [MemUsageChange] Init cuDNN: CPU +0, GPU +0, now
: CPU 674, GPU 3675 (MiB)

[09/28/2023-18:42:23] [TRT] [I] [MemUsageChange] TensorRT-managed allocation in

IExecutionContext creation: CPU +0, GPU +39, now: CPU 0, GPU 60 (MiB)
bingding: data (3, 640, 640)
bingding: prob (38001, 1, 1)

1695897743 .913941]: start yolovS detect

Program Outcome
@ Lane Keeping

After initiating the game, the car will follow the line patrol and detect the yellow
line along the roadside. Depending on whether the yellow line is straight or

curved, the car will execute forward movement and turning actions to maintain



=== Page 10 ===
HIW/E2MOCT Shenzhen Hiwonder Technology Co,Ltd

its position within the lane.
@ Traffic Light Recognition

When the car encounters a traffic light, it will halt if the light is red and proceed
if the light is green. While crossing a pedestrian zebra crossing, the car will

automatically decelerate upon detection and move forward cautiously.
@ Turning and Parking

When the car detects a traffic sign ahead while moving forward, it will respond
accordingly to the sign. If it indicates a right turn, the car will turn right and

continue forward. If it indicates parking, the car will park sideways.

6) Once you have experienced this functionality, execute the command or

restart the robot to activate the app service.

Run the command to restart the app service. When the buzzer emits a beeping

sound, it indicates that the service has been successfully enabled.

sudo systemctl start start_app_node.service

start start_app_node.servicelf

3. Recognition & Debugging

During the operation of the vehicle, it may encounter poor recognition
performance, leading to incorrect actions by the vehicle. In such cases,
parameter adjustments are needed. The specific adjustment methods are as

follows:
3.1 Adjusting the Camera Angle

When using the autonomous driving function, also pay attention to the angle of

the camera on the vehicle and ensure the camera's position is correct.

1) Attach the depth camera to the camera mount.
8



=== Page 11 ===
4 IVW/E) | Oo — t Shenzhen Hiwonder Technology Co,Ltd

2) Adjust the joints of the depth camera to the lowest angle so that the

camera captures the vehicle's body.

3) Slightly raise the depth camera so that it just does not capture the vehicle's

body.



=== Page 12 ===
Shenzhen Hiwonder Technology Co,Ltd

3.2 Color Threshold Adjustment

If the car deviates (veers off straight) during driving, you can correct it by

adjusting the color threshold. The specific adjustment method is as follows:

1) Place the robot on the map, centering it on the roads within the map.

10



=== Page 13 ===
Hiweander Shenzhen Hiwonder Technology Co,Ltd

2) Execute the command, and hit Enter.

sudo systemctl stop start_app_node.service

stop start_app_node.service -

3) Run the command and hit Enter to enable the camera service.
roslaunch jetauto_peripherals depth_cam.launch

| b jetauto_pertpherals depth_cam.launch

If you need to use monocular camera, and you need to enter the following

command, then hit Enter key.
roslaunch jetauto_peripherals usb_cam.launch
jetauto peripherals usb cam.launch

4) Create a new terminal, and type the command to open the color

adjustment tool.

python3 jetauto_software/lab_tool/main.py

5) Select ‘yellow’.

11



=== Page 14 ===
Se} hen H von«del inoliogy ( o.Ltd

LAB_Tool 1.0

135 255 ‘ tpyz

© English
119 255

B — —  ———_—cr 132 255

LAB is composed of one lightness channel and two color channels. And each color is represented by
three values, including L, Aand B

-L*refers to lightness

- A*refers to the components from green to red

~ B*refers to the components from blue to yellow

6) Adjust the three LAB colors on the left side to enhance yellow identification,

as illustrated in the figure below:

LAB_Tool 1.0

L a 135 255 ‘ Color list a

yellow * English

A — 119 255

B Ss 132 —_—= 255

LAB is composed of one lightness channel and two color channels. And each color is represented by
three values, including L, A and B

~ L*refers to lightness

- A*refers to the components from green to red

- B*refers to the components from blue to yellow

7) Click-on ‘Save’ button.

12



=== Page 15 ===
HIW/E2MOCT Shenzhen Hiwonder Technology Co,Ltd

Color list chy

® English

Ada

Delete

Note: It is recommended not to adjust the color threshold for only one section of
the road during the adjustment process. Place the car on various sections of the
road it will traverse during operation. By adjusting the color thresholds in multiple

locations, the results will be more effective.

3.3 Road Sign and Traffic Light Identification and Debugging

If the car fails to execute a corresponding action after recognizing a sign or a
traffic light, the confidence level in the launch file can be adjusted accordingly.

The specific method is as follows:

1) Create a terminal, and type the command, then hit Enter to navigate to the

self_driving folder.

roscd jetauto_example/scripts/self_driving/

jetauto_example/scripts/self_driving /Al

2) Execute the command and hit Enter key.

vim self_driving.launch

3) Locate conf_thresh parameter, and modify the value behind it as pictured.

13



=== Page 16 ===
<?xml verston="1
<Launch>
<arg name default />
<include file ‘ />
<! JER it HK B(chassis driver)-->
<!--<include file="$(find hiwonder_controller)/launch/hiwonder_controlle
r.launch"/> -->

<arg name= default=
<rosparam param=

} , ‘crosswalk’ ]</rosparam>
<node unless pkg
name output

<param name value
<param name value
<param name value
<param name value

</node>

<node pkg name
output

<param

4) Adjust the conf_thresh value by slightly lowering it within the range of 0.1
to 0.2, as depicted in the figure below. Set the conf_thresh value to 0.65
(modification method: after selecting the value with the left mouse button,
press ESC, then press 'i' to enter text mode and modify it to the desired
value. For more detailed editing methods, you can search the Internet

using the keyword "vim editor to modify text").

<?xml version=
2 <Launch>
<arg name default [>
<arg name default
<include fz file=
<arg name value />
</include>

<include unless

1 --JEERRIRZA(chassis driver)
<include file

<arg name default

<rosparam param=

<node unless= J
<param name="u value
<param name= } value
<param name= value=

, ‘crosswalk' ]</rosparam>
name= } output=

<param name t value=
</node>

5) After making the changes, press ESC in the interface, then press and hold
and hit Enter to exit the interface. After that, you can restart the program

according to the game instructions to see the effects.

6) When adjusting the conf_thresh value doesn't yield satisfactory results,
you may need to retrain the YOLOv5 model. For specific training methods,
please refer to: "1 Tutorials\ 3 ROS1 Courses\ 8 ROS+Machine
Learning Courses\ 2 Machine Learning Application" to train the model.

14



=== Page 17 ===
ht iIiweaonder Shenzhen Hiwonder Technology Co,Ltd

Once training is completed, load the model path into the launch file, and

then restart the game.
3.4 Program Outcome

During the car's operation, besides controlling its trajectory by adjusting the
color threshold (2.2), there are also parameters within the program to regulate
the car's movement. If the car continues to exhibit deflection and jitter even

after adjusting the color threshold, please refer to the following instructions:

Locate and open the self_driving.py file, located at

"jetauto_example\scripts\self_driving\self_driving.py’.

Going straight parameter adjustment:

Locate the "Ilane_x" parameter in the document. You can search for it using the

software you are using, as indicated by the red box in the figure below:

.SetPoint

-angular.z

The "lane_x" parameter represents the central point of the lane line and is
crucial for maintaining straight lane alignment. This parameter is preset by our
company, and typically does not require adjustment. However, if you need to

fine-tune the effect, you can adjust it within a range of +3 values.
For adjusting the parameter related to right turns:

Search for the following code section in the file:

15



=== Page 18 ===
ht IW/EM Oo er Shenzhen Hiwonder Technology Co,Ltd

The "lane_x" parameter identifies the central point of the lane line. When this
position exceeds 150, the car will execute a right turn. Users can control the
turning position of the car by adjusting this value appropriately, within a range
of +20. This adjustment depends on the camera angle you've configured. By
default, our company sets this parameter, and typically, there is no need to

change it.

Note: Additional supplementary content can be found in the "Autonomous Driving

Lesson" section."

16


